<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="mapper.prodReview">
	<select id="selectWritableReview" parameterType="Long" resultType="prodReviewVO">
	   SELECT 
	        p.productName,
	        p.imgUrl,
	        s.storeName,
	        po.orderedAt,
	        poi.productNum,
	        po.pdOrderNum,
	        po.userNum,
	        DATE_ADD(po.orderedAt, INTERVAL 30 DAY) AS deadline
	    FROM productOrder po
	    JOIN productOrderItem poi ON po.pdOrderNum = poi.pdOrderNum
	    JOIN product p ON poi.productNum = p.productNum
	    JOIN sellerDetail s ON p.sellerNum = s.sellerNum
	    WHERE po.userNum = #{userNum}
	      AND po.deleveryStatus = '구매확정'
	      AND DATE_ADD(po.orderedAt, INTERVAL 30 DAY) >= NOW()
	      AND NOT EXISTS (
	          SELECT 1 
	          FROM prodReview r
	          WHERE r.userNum = po.userNum
	            AND r.productNum = poi.productNum
	      )	
	</select>
	
	<select id="selectWrittenReviewList" parameterType="Long" resultType="prodReview">
		SELECT 
		    pr.reviewNum,
		    pr.userNum,
		    p.productNum,
		    p.productName,
		    p.imgUrl AS productImgUrl,
		    pr.pdRating,
		    pr.pdReviewContent,
		    pr.createdAt,
		    u.userName AS buyerName,
		    s.storeName
		FROM 
		    prodReview pr
		JOIN 
		    product p ON pr.productNum = p.productNum
		JOIN 
		    user u ON pr.userNum = u.userNum
		JOIN 
		    sellerdetail s ON p.sellerNum = s.sellerNum
		WHERE 
		    pr.userNum = #{userNum}  -- 여기 ?는 구매자 userNum
		ORDER BY 
		    pr.createdAt DESC;
	</select>
	
	<insert id="insertProdReview" parameterType="prodReview">
		insert into prodReview (userNum,productNum,pdRating,pdReviewContent,pdReviewImgUrl)
			values(#{userNum},#{productNum},#{pdRating},#{pdReviewContent},#{pdReviewImgUrl})
	</insert>
	
	<select id="selectProdReview" parameterType="map" resultType="prodReviewVO">
		SELECT 
			r.productNum, 
	        p.productName,
	        CONCAT(LEFT(u.userId, CHAR_LENGTH(u.userId) - 3), '***') AS userId,
	        r.pdRating, 
	        r.pdReviewContent AS pdContent, 
	        r.createdAt,
	        r.pdReviewImgUrl AS imgUrl
	    FROM prodReview r
	    JOIN product p ON r.productNum = p.productNum
	    JOIN user u ON r.userNum = u.userNum
	    WHERE r.productNum = #{productNum}
	    ORDER BY r.createdAt DESC
	    LIMIT #{start}, #{pageSize}
	</select>
	<select id="countProdReview" resultType="Integer" parameterType="long">
	    SELECT COUNT(*) FROM prodReview WHERE productNum = #{productNum}
	</select>
</mapper>